{
    "name": "all-failed",
    "date": 1680429764045,
    "dateH": "2023/4/2 18:02:44",
    "duration": 8655,
    "durationH": "8.655s",
    "cwd": "H:/workspace/monocart-reporter-test",
    "configFile": "tests/all-failed/playwright.config.js",
    "testDir": "tests/all-failed",
    "outputDir": "docs/all-failed",
    "version": "1.32.1",
    "workers": 4,
    "metadata": {},
    "projects": [
        {
            "name": "",
            "use": {},
            "testDir": "tests/all-failed",
            "outputDir": "docs/all-failed"
        }
    ],
    "system": {
        "cpu": {
            "color": "#117DBB",
            "count": 8,
            "model": "Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz",
            "speed": 4008
        },
        "mem": {
            "color": "#8B12AE",
            "total": 25705492480
        },
        "arch": "x64",
        "platform": "win32",
        "release": "10.0.19044",
        "type": "Windows_NT",
        "version": "Windows 10 Home",
        "uptime": 423874.546,
        "hostname": "DESKTOP-7OOOJ8B",
        "homedir": "C:\\Users\\jinchen",
        "tmpdir": "C:\\Users\\jinchen\\AppData\\Local\\Temp",
        "pid": 20136,
        "cwd": "H:/workspace/monocart-reporter-test",
        "timestampStart": 1680429764045,
        "ticks": [
            {
                "cpu": {
                    "percent": 100
                },
                "mem": {
                    "free": 14121566208
                },
                "timestamp": 1680429766164
            },
            {
                "cpu": {
                    "percent": 100
                },
                "mem": {
                    "free": 13820133376
                },
                "timestamp": 1680429768180
            },
            {
                "cpu": {
                    "percent": 100
                },
                "mem": {
                    "free": 13900144640
                },
                "timestamp": 1680429770333
            },
            {
                "cpu": {
                    "percent": 100
                },
                "mem": {
                    "free": 14182019072
                },
                "timestamp": 1680429772405
            },
            {
                "cpu": {
                    "percent": 100
                },
                "mem": {
                    "free": 14346235904
                },
                "timestamp": 1680429772693
            }
        ],
        "timestampEnd": 1680429772700
    },
    "columns": [
        {
            "id": "caseType",
            "name": "",
            "width": 36,
            "sortable": false,
            "align": "center",
            "formatter": "iconCaseType",
            "detailed": false
        },
        {
            "id": "title",
            "name": "Title",
            "searchable": true,
            "width": 300,
            "maxWidth": 1230,
            "detailed": false
        },
        {
            "id": "type",
            "name": "Type",
            "width": 50,
            "sortable": false,
            "align": "center",
            "formatter": "iconType",
            "detailed": false
        },
        {
            "id": "duration",
            "name": "Duration",
            "align": "right",
            "sortAsc": false,
            "formatter": "duration",
            "detailed": false
        },
        {
            "id": "errors",
            "name": "Errors",
            "width": 60,
            "align": "center",
            "comparer": "errors",
            "formatter": "errors",
            "detailed": false
        },
        {
            "id": "logs",
            "name": "Logs",
            "width": 60,
            "align": "center",
            "comparer": "logs",
            "formatter": "logs",
            "detailed": false
        },
        {
            "id": "annotations",
            "name": "Annotations",
            "width": 100,
            "markdown": true,
            "searchable": true,
            "comparer": "annotations",
            "formatter": "annotations",
            "detailed": false
        },
        {
            "id": "attachments",
            "name": "Attachments",
            "width": 100,
            "align": "center",
            "formatter": "attachments",
            "detailed": false
        },
        {
            "id": "status",
            "name": "Status",
            "align": "center",
            "detailed": false
        },
        {
            "id": "expectedStatus",
            "name": "Expected",
            "align": "center",
            "detailed": false
        },
        {
            "id": "outcome",
            "name": "Outcome",
            "align": "center",
            "width": 85,
            "detailed": false
        },
        {
            "id": "retry",
            "name": "Retry",
            "align": "center",
            "width": 50,
            "detailed": false
        },
        {
            "id": "location",
            "name": "Location",
            "classMap": "mcr-location",
            "width": 200,
            "detailed": false
        }
    ],
    "rows": [
        {
            "title": "project",
            "type": "suite",
            "suiteType": "project",
            "tests": 3,
            "subs": [
                {
                    "title": "example.spec.js",
                    "type": "suite",
                    "suiteType": "file",
                    "tests": 3,
                    "subs": [
                        {
                            "title": "one",
                            "type": "case",
                            "caseType": "failed",
                            "ok": false,
                            "outcome": "unexpected",
                            "expectedStatus": "passed",
                            "location": "tests/all-failed/example.spec.js:3:1",
                            "timestamps": [
                                1680429765692,
                                1680429765745
                            ],
                            "duration": 53,
                            "timeout": 30000,
                            "retry": 0,
                            "status": "failed",
                            "workers": [
                                {
                                    "parallelIndex": 0,
                                    "workerIndex": 0,
                                    "timestamp": 1680429765692,
                                    "duration": 53
                                }
                            ],
                            "subs": [
                                {
                                    "title": "Before Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 15,
                                    "location": ""
                                },
                                {
                                    "title": "expect.toBe",
                                    "type": "step",
                                    "category": "expect",
                                    "status": "expect",
                                    "duration": 24,
                                    "location": "tests/all-failed/example.spec.js:4:15",
                                    "errors": [
                                        "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n\n  2 |\n  3 | test('one', () => {\n> 4 |     expect(1).toBe(2);\n    |               ^\n\n    at H:\\workspace\\monocart-reporter-test\\tests\\all-failed\\example.spec.js:4:15"
                                    ],
                                    "numErrors": 1
                                },
                                {
                                    "title": "After Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 9,
                                    "location": ""
                                }
                            ],
                            "numErrors": 1
                        },
                        {
                            "title": "two",
                            "type": "case",
                            "caseType": "failed",
                            "ok": false,
                            "outcome": "unexpected",
                            "expectedStatus": "passed",
                            "location": "tests/all-failed/example.spec.js:8:1",
                            "timestamps": [
                                1680429768159,
                                1680429768196
                            ],
                            "duration": 37,
                            "timeout": 30000,
                            "retry": 0,
                            "status": "failed",
                            "workers": [
                                {
                                    "parallelIndex": 1,
                                    "workerIndex": 1,
                                    "timestamp": 1680429768159,
                                    "duration": 37
                                }
                            ],
                            "subs": [
                                {
                                    "title": "Before Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 20,
                                    "location": ""
                                },
                                {
                                    "title": "expect.toBe",
                                    "type": "step",
                                    "category": "expect",
                                    "status": "expect",
                                    "duration": 5,
                                    "location": "tests/all-failed/example.spec.js:9:15",
                                    "errors": [
                                        "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n\n  7 |\n  8 | test('two', () => {\n> 9 |     expect(1).toBe(2);\n    |               ^\n\n    at H:\\workspace\\monocart-reporter-test\\tests\\all-failed\\example.spec.js:9:15"
                                    ],
                                    "numErrors": 1
                                },
                                {
                                    "title": "After Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 7,
                                    "location": ""
                                }
                            ],
                            "numErrors": 1
                        },
                        {
                            "title": "three",
                            "type": "case",
                            "caseType": "failed",
                            "ok": false,
                            "outcome": "unexpected",
                            "expectedStatus": "passed",
                            "location": "tests/all-failed/example.spec.js:12:1",
                            "timestamps": [
                                1680429770754,
                                1680429770838
                            ],
                            "duration": 84,
                            "timeout": 30000,
                            "retry": 0,
                            "status": "failed",
                            "workers": [
                                {
                                    "parallelIndex": 0,
                                    "workerIndex": 2,
                                    "timestamp": 1680429770754,
                                    "duration": 84
                                }
                            ],
                            "subs": [
                                {
                                    "title": "Before Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 24,
                                    "location": ""
                                },
                                {
                                    "title": "expect.toBe",
                                    "type": "step",
                                    "category": "expect",
                                    "status": "expect",
                                    "duration": 5,
                                    "location": "tests/all-failed/example.spec.js:13:15",
                                    "errors": [
                                        "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n\n  11 |\n  12 | test('three', () => {\n> 13 |     expect(1).toBe(2);\n     |               ^\n\n    at H:\\workspace\\monocart-reporter-test\\tests\\all-failed\\example.spec.js:13:15"
                                    ],
                                    "numErrors": 1
                                },
                                {
                                    "title": "After Hooks",
                                    "type": "step",
                                    "category": "hook",
                                    "status": "hook",
                                    "duration": 9,
                                    "location": ""
                                }
                            ],
                            "numErrors": 1
                        }
                    ],
                    "location": "tests/all-failed/example.spec.js:0:0"
                }
            ]
        }
    ],
    "formatters": {},
    "suiteTypes": [
        "project",
        "file",
        "describe"
    ],
    "caseTypes": [
        "passed",
        "flaky",
        "skipped",
        "failed"
    ],
    "summary": {
        "tests": {
            "name": "Tests",
            "value": 3,
            "nav": true,
            "id": "tests"
        },
        "passed": {
            "name": "Passed",
            "value": 0,
            "color": "green",
            "nav": true,
            "id": "passed",
            "percent": "0.0%"
        },
        "flaky": {
            "name": "Flaky",
            "value": 0,
            "color": "orange",
            "nav": true,
            "id": "flaky",
            "percent": "0.0%"
        },
        "skipped": {
            "name": "Skipped",
            "value": 0,
            "color": "gray",
            "nav": true,
            "id": "skipped",
            "percent": "0.0%"
        },
        "failed": {
            "name": "Failed",
            "value": 3,
            "color": "#d00",
            "nav": true,
            "id": "failed",
            "percent": "100.0%"
        },
        "steps": {
            "name": "Steps",
            "value": 9,
            "id": "steps"
        },
        "suites": {
            "name": "Suites",
            "value": 1,
            "id": "suites"
        },
        "projects": {
            "name": "Projects",
            "description": "Suite type is project",
            "value": 1,
            "id": "projects"
        },
        "files": {
            "name": "Files",
            "description": "Suite type is file",
            "value": 1,
            "id": "files"
        },
        "describes": {
            "name": "Describes",
            "description": "Suite type is describe",
            "value": 0,
            "id": "describes"
        },
        "retries": {
            "name": "Retries",
            "value": 0,
            "id": "retries"
        },
        "errors": {
            "name": "Errors",
            "value": 3,
            "id": "errors"
        },
        "logs": {
            "name": "Logs",
            "value": 0,
            "id": "logs"
        },
        "attachments": {
            "name": "Attachments",
            "value": 0,
            "id": "attachments"
        }
    },
    "tags": {},
    "pieChart": "<svg viewBox=\"0 0 360 150\" width=\"360\" height=\"150\" xmlns=\"http://www.w3.org/2000/svg\"><g class=\"mcr-pie-path-passed\"><path d=\"\" fill=\"green\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"0,-10\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-flaky\"><path d=\"\" fill=\"orange\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"0,-10\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-skipped\"><path d=\"\" fill=\"gray\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"0,-10\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-failed\"><path d=\"M75,75 L75,10 A65,65 0 1 1 75,140 A65,65 0 1 1 75,10 z\" fill=\"#d00\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"0,10\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g transform=\"translate(160 10)\"><g class=\"mcr-pie-legend-passed\" transform=\"translate(0 0)\"><circle cx=\"10\" cy=\"16\" r=\"10\" fill=\"green\" /><text x=\"30\" y=\"16\" alignment-baseline=\"middle\">Passed</text><text x=\"115\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"middle\">0</text><text x=\"190\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"end\">0.0%</text></g><g class=\"mcr-pie-legend-flaky\" transform=\"translate(0 32)\"><circle cx=\"10\" cy=\"16\" r=\"10\" fill=\"orange\" /><text x=\"30\" y=\"16\" alignment-baseline=\"middle\">Flaky</text><text x=\"115\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"middle\">0</text><text x=\"190\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"end\">0.0%</text></g><g class=\"mcr-pie-legend-skipped\" transform=\"translate(0 64)\"><circle cx=\"10\" cy=\"16\" r=\"10\" fill=\"gray\" /><text x=\"30\" y=\"16\" alignment-baseline=\"middle\">Skipped</text><text x=\"115\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"middle\">0</text><text x=\"190\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"end\">0.0%</text></g><g class=\"mcr-pie-legend-failed\" transform=\"translate(0 96)\"><circle cx=\"10\" cy=\"16\" r=\"10\" fill=\"#d00\" /><text x=\"30\" y=\"16\" alignment-baseline=\"middle\">Failed</text><text x=\"115\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"middle\">3</text><text x=\"190\" y=\"16\" alignment-baseline=\"middle\" text-anchor=\"end\">100.0%</text></g></g></svg>"
}
